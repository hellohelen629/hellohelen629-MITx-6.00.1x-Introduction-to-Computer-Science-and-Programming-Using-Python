#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Mon Sep 20 17:08:18 2021

@author: zhanghanqing
"""

# 1
# Assume s is a string of lower case characters.
# Write a program that counts up the number of vowels contained in the string s. 
# Valid vowels are: 'a', 'e', 'i', 'o', and 'u'. For example, if s = 'azcbobobegghakl',
# your program should print:    
# Number of vowels: 5

s = 'azcbobobegghakl'
count = 0
for i in s:
    if i == 'a' or i == 'e' or i == 'i' or i == 'o' or i == 'u':
        count += 1
print('Number of vowels:', count)

# 2
# Assume s is a string of lower case characters.
# Write a program that prints the number of times the string 'bob' occurs in s. 
# For example, if s = 'azcbobobegghakl', then your program should print
# Number of times bob occurs is: 2

s = 'azcbobobegghakl'
count = 0
for i in range(len(s)-2):
    if s[i] == 'b' and s[i+1]  == 'o' and s[i+2]  == 'b':
        count += 1
print('Number of times bob occurs is:', str(count))

# 3

# Assume s is a string of lower case characters.
# Write a program that prints the longest substring of s in which 
# the letters occur in alphabetical order. For example, 
# if s = 'azcbobobegghakl', then your program should print
# Longest substring in alphabetical order is: beggh
# In the case of ties, print the first substring. For example, 
# if s = 'abcbcd', then your program should print
# Longest substring in alphabetical order is: abc


s = "azcbobobegghakl"
longest = s[0]
current = s[0]
for c in s[1:]:
    if c >= current[-1]:
        current += c
        if len(current) > len(longest):
            longest = current
    else:
        current = c
print("Longest substring in alphabetical order is:", longest)